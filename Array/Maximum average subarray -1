Problem: You are given an integer array nums consisting of n elements, and an integer k.
          Find a contiguous subarray whose length is equal to k that has the maximum average value and return this value. Any answer with a calculation error less than 10-5 
          will be accepted.
          
          Example 1:
          Input: nums = [1,12,-5,-6,50,3], k = 4
          Output: 12.75000
          Explanation: Maximum average is (12 - 5 - 6 + 50) / 4 = 51 / 4 = 12.75

Solution:

double findMaxAverage(vector<int>& nums, int k) {
        int n=nums.size();
        int i=0;
        int j=k-1;
        int sum=0;
        for(int y=i;y<=j;y++){
            sum=sum+nums[y];
        }
        int maxSum=sum;
        j++;
        while(j<n){
            sum=sum-nums[i++];
            sum=sum+nums[j++];
            maxSum=max(maxSum,sum);
        }
        double maxAvg=maxSum/double(k);
        return maxAvg;
    }
