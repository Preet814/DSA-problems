Problem: Given a collection of Intervals, the task is to merge all of the overlapping Intervals.
          
          Example 1:
          Input:
          Intervals = {{1,3},{2,4},{6,8},{9,10}}
          Output: {{1, 4}, {6, 8}, {9, 10}}
          Explanation: Given intervals: [1,3],[2,4]
          [6,8],[9,10], we have only two overlapping
          intervals here,[1,3] and [2,4]. Therefore
          we will merge these two and return [1,4],
          [6,8], [9,10].

Solution:

          vector<vector<int>> overlappedInterval(vector<vector<int>>& intervals) {
                  vector<vector<int>> ans;
                  sort(intervals.begin(),intervals.end());
                  vector<int> current=intervals[0];
          
                  for(int i=1;i<intervals.size();i++){
                      if(current[1]<intervals[i][0]){
                          ans.push_back(current);
                          current=intervals[i];
                      }
                      else{
                          current[1]=max(current[1],intervals[i][1]);
                      }
                  }
                  ans.push_back(current);
                  return ans;
              }
