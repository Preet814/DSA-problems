Problem: Given a non-negative integer x, return the square root of x rounded down to the nearest integer. The returned integer should be non-negative as well.
          You must not use any built-in exponent function or operator.
          For example, do not use pow(x, 0.5) in c++ or x ** 0.5 in python.
           
          Example 1:
          Input: x = 4
          Output: 2
          Explanation: The square root of 4 is 2, so we return 2.

Solution:

int mySqrt(int x) {
        int s=0,e=x;
        long long int ans=-1;
        while(s<=e){
            long long int mid=s+(e-s)/2;
            if(mid*mid>x){
                e=mid-1;
            }
            else if(mid*mid<x){
                ans=mid;
                s=mid+1;
            }
            else if(mid*mid==x){
                return mid;
            }
        }
        return ans;
    }
