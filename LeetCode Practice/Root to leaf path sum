Problem : Given a binary tree and an integer target, check whether there is a root-to-leaf path with its sum as target.

          Examples :
          Input: tree = 1, target = 2
                      /   \
                    2     3
          Output: false
          Explanation: There is no root to leaf path with sum 2.

Solution : 

bool solve(Node* root,int sum,int target){
        if(root==NULL)
            return false;
        sum+=root->data;
        if(root->left==NULL && root->right==NULL){
            if(sum==target)
                return true;
            else
                return false;
        }
            
        
        return (solve(root->left,sum,target))|| (solve(root->right,sum,target));
    }
    bool hasPathSum(Node *root, int target) {
        int sum=0;
        return solve(root,sum,target);
    }
