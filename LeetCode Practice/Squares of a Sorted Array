Problem : Given an integer array nums sorted in non-decreasing order, return an array of the squares of each number sorted in 
          non-decreasing order.
          
          Example 1:
          Input: nums = [-4,-1,0,3,10]
          Output: [0,1,9,16,100]
          Explanation: After squaring, the array becomes [16,1,0,9,100].
          After sorting, it becomes [0,1,9,16,100].

Solution : 

class Solution {
public:
    vector<int> sortedSquares(vector<int>& nums) {
        int n=nums.size();
        vector<int> ans(n,0);
        // [0,0,0,0,0]
        int left=0,right=n-1;
        for(int i=n-1;i>=0;i--){
            int leftVal=abs(nums[left]);
            int rightVal=abs(nums[right]);
            if(rightVal>=leftVal){
                ans[i]=rightVal*rightVal;
                right--;
            }
            else{
                ans[i]=leftVal*leftVal;
                left++;
            }
        }
        return ans;
    }
};
