Problem : Given an integer array nums, return the third distinct maximum number in this array. If the third maximum does not 
          exist, return the maximum number.
          
          Example 1:
          Input: nums = [3,2,1]
          Output: 1
          Explanation:
          The first distinct maximum is 3.
          The second distinct maximum is 2.
          The third distinct maximum is 1.

Solution :

class Solution {
public:
    int thirdMax(vector<int>& nums) {
        int n=nums.size();
        priority_queue<int,vector<int>,greater<int>> pq;
        unordered_set<int> st;
        for(int i=0;i<n;i++){
            st.insert(nums[i]);
        }
        for(auto it:st){
            pq.push(it);
            if(pq.size()>3)
                pq.pop();
        }
        if(pq.size()<3){
            while(pq.size()!=1){
                pq.pop();
            }
        }
        return pq.top();
    }
};
