Problem : There are n rooms labeled from 0 to n - 1 and all the rooms are locked except for room 0. Your goal is to visit all 
          the rooms. However, you cannot enter a locked room without having its key.
          When you visit a room, you may find a set of distinct keys in it. Each key has a number on it, denoting which room 
          it unlocks, and you can take all of them with you to unlock the other rooms.
          Given an array rooms where rooms[i] is the set of keys that you can obtain if you visited room i, return true if you 
          can visit all the rooms, or false otherwise. 
          
          Example 1:
          Input: rooms = [[1],[2],[3],[]]
          Output: true
          Explanation: 
          We visit room 0 and pick up key 1.
          We then visit room 1 and pick up key 2.
          We then visit room 2 and pick up key 3.
          We then visit room 3.
          Since we were able to visit every room, we return true.

Solution : 

class Solution {
public:
    void solve(vector<vector<int>>& rooms,vector<bool>& arr,int idx){
        if(arr[idx]){
            return;
        }
        else{
            arr[idx]=true;
            for(int i=0;i<rooms[idx].size();i++){
                solve(rooms,arr,rooms[idx][i]);
            }
        }
    }
    bool canVisitAllRooms(vector<vector<int>>& rooms) {
        int n=rooms.size();
        vector<bool> arr(n,false);
        solve(rooms,arr,0);
        for(int i=0;i<arr.size();i++){
            if(arr[i]==false)
                return false;
        }
        return true;
    }
};
