Problem : You are given a positive integer n. A binary string x is valid if all substrings of x of length 2 contain at least 
          one "1".
          Return all valid strings with length n, in any order.
          
          Example 1:
          Input: n = 3
          Output: ["010","011","101","110","111"]
          Explanation:
          The valid strings of length 3 are: "010", "011", "101", "110", and "111".

Solution :

class Solution {
public:
    bool check(string curr){
        for(int i=0;i<curr.size()-1;i++){
            if(curr.substr(i,2)=="00")
                return false;
        }
        return true;
    }
    void solve(vector<string>& ans,string& curr,int n){
        if(curr.size()==n){
            if(check(curr))
                ans.push_back(curr);
            return;
        }
        curr.push_back('0');
        solve(ans,curr,n);
        curr.pop_back();
        curr.push_back('1');
        solve(ans,curr,n);
        curr.pop_back();
    }
    vector<string> validStrings(int n) {
        vector<string> ans;
        string curr="";
        solve(ans,curr,n);
        return ans;
    }
};
