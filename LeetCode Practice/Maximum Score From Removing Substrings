Problem : You are given a string s and two integers x and y. You can perform two types of operations any number of times.
          Remove substring "ab" and gain x points.
          For example, when removing "ab" from "cabxbae" it becomes "cxbae".
          Remove substring "ba" and gain y points.
          For example, when removing "ba" from "cabxbae" it becomes "cabxe".
          Return the maximum points you can gain after applying the above operations on s.
          
          Example 1:
          Input: s = "cdbcbbaaabab", x = 4, y = 5
          Output: 19
          Explanation:
          - Remove the "ba" underlined in "cdbcbbaaabab". Now, s = "cdbcbbaaab" and 5 points are added to the score.
          - Remove the "ab" underlined in "cdbcbbaaab". Now, s = "cdbcbbaa" and 4 points are added to the score.
          - Remove the "ba" underlined in "cdbcbbaa". Now, s = "cdbcba" and 5 points are added to the score.
          - Remove the "ba" underlined in "cdbcba". Now, s = "cdbc" and 5 points are added to the score.
          Total score = 5 + 4 + 5 + 5 = 19.

Solution : 

class Solution {
public:
    int maximumGain(string s, int x, int y) {
        int n=s.length();
        int aCnt=0,bCnt=0;
        int mini=min(x,y);
        int ans=0;
        for(int i=0;i<n;i++){
            char ch=s[i];
            if(ch=='a'){
                if(x<y && bCnt>0){
                    bCnt--;
                    ans+=y;
                }
                else{
                    aCnt++;
                }
            }
            else if(ch=='b'){
                if(x>y && aCnt>0){
                    aCnt--;
                    ans+=x;
                }
                else{
                    bCnt++;
                }
            }
            else{
                ans+=min(aCnt,bCnt)*mini;
                aCnt=0;
                bCnt=0;
            }
        }
        ans+=min(aCnt,bCnt)*mini;
        return ans;
    }
};
