Problem : Given an integer array nums containing distinct positive integers, find and return any number from the array that is 
          neither the minimum nor the maximum value in the array, or -1 if there is no such number.
          Return the selected integer.
          
          Example 1:
          Input: nums = [3,2,1,4]
          Output: 2
          Explanation: In this example, the minimum value is 1 and the maximum value is 4. Therefore, either 2 or 3 can be 
          valid answers.

Solution : 

class Solution {
public:
    int findNonMinOrMax(vector<int>& nums) {
        // approach - 1
        int n=nums.size();
        int mini=INT_MAX;
        int maxi=INT_MIN;
        for(int i=0;i<n;i++){
            maxi=max(maxi,nums[i]);
            mini=min(mini,nums[i]);
        }
        for(auto it:nums){
            if(it!=maxi && it!=mini)
                return it;
        }
        return -1;

        // approach - 2
        // int n=nums.size();
        // priority_queue<int> pq;
        // for(int i=0;i<n;i++){
        //     pq.push(nums[i]);
        // }
        // if(pq.size()<3)
        //     return -1;
        // pq.pop();
        // return pq.top();

        // approach - 3
        // int n=nums.size();
        // if(n<3)
        //     return -1;
        // sort(nums.begin(),nums.end());
        // return nums[1];
    }
};
