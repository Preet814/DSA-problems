Problem : You are given a positive integer days representing the total number of days an employee is available for work 
          (starting from day 1). You are also given a 2D array meetings of size n where, meetings[i] = [start_i, end_i] 
          represents the starting and ending days of meeting i (inclusive).
          Return the count of days when the employee is available for work but no meetings are scheduled.
          Note: The meetings may overlap.
          
          Example 1:
          Input: days = 10, meetings = [[5,7],[1,3],[9,10]]
          Output: 2
          Explanation:
          There is no meeting scheduled on the 4th and 8th days.

Solution : 

class Solution {
public:
    int countDays(int days, vector<vector<int>>& meetings) {
        sort(meetings.begin(),meetings.end());
        int cnt=0;
        int end=0;
        for(int i=0;i<meetings.size();i++){
            if(meetings[i][0]>end+1){
                cnt+=meetings[i][0]-end-1;
            }
            end=max(end,meetings[i][1]);
        }
        if(end!=days){
            cnt+=days-end;
        }
        return cnt;
    }
};
