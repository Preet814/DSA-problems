Problem : Given a Binary Search Tree. Convert a given BST into a Special Max Heap with the condition that all the values in the left subtree of a node should be less than all the values in the right subtree of the node. This condition is applied on all the nodes in the so converted Max Heap.

          Example 1:
          Input :
                           4
                         /   \
                        2     6
                      /  \   /  \
                     1   3  5    7  
          
          Output : 1 2 3 4 5 6 7 

Solution : 

void inorder(Node* root,vector<int>& ans){
        if(root==NULL)
            return;
        inorder(root->left,ans);
        ans.push_back(root->data);
        inorder(root->right,ans);
    }
    void bstToMaxHeap(Node* root,vector<int>& ans,int& i){
        if(root==NULL)
            return;
            
        bstToMaxHeap(root->left,ans,i);
        bstToMaxHeap(root->right,ans,i);
        root->data=ans[i++];
    }
    void convertToMaxHeapUtil(Node* root)
    {
        vector<int> ans;
        inorder(root,ans);
        int i=0;
        bstToMaxHeap(root,ans,i);
    }
