Problem : Given a sorted dictionary of an alien language having N words and k starting alphabets of standard dictionary. Find the order of characters in the alien language.
          Note: Many orders may be possible for a particular test case, thus you may return any valid order and output will be 1 if the order of string returned by the 
          function is correct else 0 denoting incorrect string returned.
           
          Example 1:
          Input: 
          N = 5, K = 4
          dict = {"baa","abcd","abca","cab","cad"}
          Output:
          1
          Explanation:
          Here order of characters is 
          'b', 'd', 'a', 'c' Note that words are sorted 
          and in the given language "baa" comes before 
          "abcd", therefore 'b' is before 'a' in output.
          Similarly we can find other orders.

Solution :

string findOrder(string dict[], int N, int K) {
        vector<int> adj[K];
        for(int i=0;i<N-1;i++){
            string s1=dict[i];
            string s2=dict[i+1];
            int len=min(s1.size(),s2.size());
            for(int j=0;j<s1.length();j++){
                if(s1[j]!=s2[j]){
                    adj[s1[j]-'a'].push_back(s2[j]-'a');
                    break;
                }
            }
        }
        int inDeg[K]={0};
        for(int i=0;i<K;i++){
            for(auto it:adj[i]){
                inDeg[it]++;
            }
        }
        queue<int> q;
        for(int i=0;i<K;i++){
            if(inDeg[i]==0){
                q.push(i);
            }
        }
        string ans="";
        while(!q.empty()){
            int node=q.front();
            q.pop();
            ans.push_back(node+'a');
            for(auto it:adj[node]){
                inDeg[it]--;
                if(inDeg[it]==0){
                    q.push(it);
                }
            }
        }
        return ans;
    }
