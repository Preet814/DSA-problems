Problem: Given a stack, the task is to sort it such that the top of the stack has the greatest element.

          Example 1:
          Input:
          Stack: 3 2 1
          Output: 3 2 1
          
          Example 2:
          Input:
          Stack: 11 2 32 3 41
          Output: 41 32 11 3 2

Solution: 

          void sortedInsert(stack<int>& s,int x){
              if(s.empty() || s.top()<x){
                  s.push(x);
                  return;
              }
              int ans=s.top();
              s.pop();
              sortedInsert(s,x);
              s.push(ans);
          }
          void SortedStack :: sort()
          {
              if(s.empty()){
                  return;
              }
                 int ans=s.top();
                 s.pop();
                 sort();
                 sortedInsert(s,ans);
          }
