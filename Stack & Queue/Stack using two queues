Problem: Implement a Stack using two queues q1 and q2.

          Example 1:
          Input:
          push(2)
          push(3)
          pop()
          push(4)
          pop()
          Output: 3 4
          Explanation:
          push(2) the stack will be {2}
          push(3) the stack will be {2 3}
          pop()   poped element will be 3 the 
                  stack will be {2}
          push(4) the stack will be {2 4}
          pop()   poped element will be 4  

Solution: 

void QueueStack :: push(int x)
{
    q1.push(x);
    return;
}

//Function to pop an element from stack using two queues. 
int QueueStack :: pop()
{
    if(q1.empty()==true)
        return -1;
    while(q1.size()!=1){
        int val=q1.front();
        q1.pop();
        q2.push(val);
    }
    int data=q1.front();
    q1.pop();
    while(q2.size()!=0){
        int val=q2.front();
        q2.pop();
        q1.push(val);
    }
    return data;
}
