Problem: You are given a queue Q of N integers of even length, rearrange the elements by interleaving the first half of the queue with the second half of the queue.
          
          Example 1:
          Input:
          N = 4
          Q = {2,4,3,1}
          Output:
          {2,3,4,1}
          Explanation:
          After the mentioned rearrangement of the first half
          and second half, our final queue will be {2,3,4,1}.

Solution:

class Solution{
public:
    vector<int> rearrangeQueue(queue<int> &q){
        int n = q.size();
        vector<int> ans(n);
        int i=0;
        while(i<n){
            ans[i] = q.front();
            q.pop();
            i = i+2;
        }
        i = 1;
        while(i<n){
            ans[i] = q.front();
            q.pop();
            i = i+2;
        }
        return ans;
    }
};
