Problem : Given a pattern containing only I's and D's. I for increasing and D for decreasing. Devise an algorithm to print the 
          minimum number following that pattern. Digits from 1-9 and digits can't repeat.
          
          Example 1:
          Input:
          D
          Output:
          21
          Explanation:
          D is meant for decreasing, so we choose the minimum number among all possible numbers like 21,31,54,87,etc.

Solution : 

string printMinNumberForPattern(string S){
        int n = S.size();
        string result;
        stack<int> stk;

        for (int i = 0; i <= n; ++i) {
            stk.push(i + 1);

            if (i == n || S[i] == 'I') {
                while (!stk.empty()) {
                    result += to_string(stk.top());
                    stk.pop();
                }
            }
        }

        return result; 
    }
