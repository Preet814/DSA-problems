Problem: Given an array of integers heights representing the histogram's bar height where the width of each bar is 1, return the area of the largest rectangle in the histogram.

          Example 1:
          Input: heights = [2,1,5,6,2,3]
          Output: 10
          Explanation: The above is a histogram where width of each bar is 1.
          The largest rectangle is shown in the red area, which has an area = 10 units.

Solution:

          class Solution {
          private:
              vector<int> rightSmaller(vector<int>& arr, int n) { 
                  stack<int> st;
                  st.push(-1);
                  vector<int> ans(n);
                  for(int i=n-1;i>=0;i--){
                      int curr=arr[i];
                      while(st.top()!=-1 && arr[st.top()]>=curr){
                          st.pop();
                      }
                      ans[i]=st.top();
                      st.push(i);
                  }
                  return ans;    
              } 
              vector<int> leftSmaller(vector<int>& arr,int n){
                  stack<int> st;
                  st.push(-1);
                  vector<int> ans(n);
                  for(int i=0;i<n;i++){
                      int curr=arr[i];
                      while(st.top()!=-1 && arr[st.top()]>=curr){
                          st.pop();
                      }
                      ans[i]=st.top();
                      st.push(i);
                  }
                  return ans;    
              }
          public:
              int largestRectangleArea(vector<int>& arr) {
                  int n=arr.size();
                  vector<int> prev(n);
                  prev=leftSmaller(arr,n);
                  
                  vector<int> next(n);
                  next=rightSmaller(arr,n);
                  
                  int area=INT_MIN;
                  for(int i=0;i<n;i++){
                      int l=arr[i];
                      if (next[i]==-1){
                          next[i]=n;
                      }
                      int b=next[i]-prev[i]-1;
                      int newArea=l*b;
                      area=max(area,newArea);
                  }
                  return area;
              }
          };
