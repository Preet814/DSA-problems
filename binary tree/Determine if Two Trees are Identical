Problem: Given two binary trees, the task is to find if both of them are identical or not. 

          Example 1:
          Input:
               1          1
             /   \      /   \
            2     3    2     3
          Output: Yes
          Explanation: There are two trees both
          having 3 nodes and 2 edges, both trees
          are identical having the root as 1,
          left child of 1 is 2 and right child
          of 1 is 3.

Solution: 

bool isIdentical(Node *r1, Node *r2)
    {
        if(r1==NULL && r2==NULL)
            return true;
        if((r1==NULL && r2!=NULL) || (r1!=NULL && r2==NULL))
            return false;
        if(r1->data!=r2->data)
            return false;
        
        bool left=isIdentical(r1->left,r2->left);
        if(left==false)
            return false;
        
        bool right=isIdentical(r1->right,r2->right);
        if(right==false)
            return false;
            
        return true;
    }
