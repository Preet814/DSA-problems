Problem:  Given a binary tree. Find the preorder traversal of the tree without using recursion.

Example 1:

Input:
           1
         /   \
        2     3
      /  \
     4    5
Output: 1 2 4 5 3
Explanation:
Preorder traversal (Root->Left->Right) of 
the tree is 1 2 4 5 3.

Solution:

vector<int> preOrder(Node* root)
    {
        Node* current,* pre;
        current=root;
        vector<int> ans;
        while(current!=NULL){
            if(current->left==NULL){
                ans.push_back(current->data);
                current=current->right;
            }
            else{
                pre=current->left;
                while(pre->right!=NULL && pre->right!=current)
                    pre=pre->right;
                if(pre->right==NULL){
                    pre->right=current;
                    ans.push_back(current->data);
                    current=current->left;
                }
                else{
                    pre->right=NULL;
                    current=current->right;
                }
            }
        }
        return ans;
    }
