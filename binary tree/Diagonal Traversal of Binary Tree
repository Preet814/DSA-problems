Problem: Given a Binary Tree, print the diagonal traversal of the binary tree.
Consider lines of slope -1 passing between nodes. Given a Binary Tree, print all diagonal elements in a binary tree belonging to same line.
If the diagonal element are present in two different subtress then left subtree diagonal element should be taken first and then right subtree. 

Example 1:
Input :
            8
         /     \
        3      10
      /   \      \
     1     6     14
         /   \   /
        4     7 13
Output : 8 10 14 3 6 7 13 1 4

Solution:

vector<int> diagonal(Node *root)
{
    vector<int> ans;
    deque<Node*> q;
    q.push_front(root);
    while(!q.empty()){
        Node* node=q.front();
        q.pop_front();
        ans.push_back(node->data);
        if(node->left){
            q.push_back(node->left);
        }
        if(node->right){
            q.push_front(node->right);
        }
    }
    return ans;
}
