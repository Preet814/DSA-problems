Problem: Given a Binary Tree, find Right view of it. Right view of a Binary Tree is set of nodes visible when tree is viewed from right side.

          Right view of following tree is 1 3 7 8.
          
                    1
                 /     \
               2        3
             /   \      /    \
            4     5   6    7
              \
               8
          
          Example 1:
          Input:
                 1
              /    \
             3      2
          Output: 1 2

Solution:

class Solution
{
    public:
    //Function to return list containing elements of right view of binary tree.
    void solve(Node* root,vector<int> &ans,int level){
    if(root==NULL)
        return;
    if(level==ans.size())
        ans.push_back(root->data);
    solve(root->right,ans,level+1);
    solve(root->left,ans,level+1);
    
}
    vector<int> rightView(Node *root)
    {
       vector<int> ans;
        if(root==NULL)
            return ans;
        solve(root,ans,0);
        return ans;
    }
};
