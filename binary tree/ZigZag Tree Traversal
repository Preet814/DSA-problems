Problem: Given a Binary Tree. Find the Zig-Zag Level Order Traversal of the Binary Tree.

          Example 1:
          Input:
                  1
                /   \
               2     3
              / \   /  \
             4   5 6    7
          Output:
          1 3 2 4 5 6 7

Solution:

vector <int> zigZagTraversal(Node* root)
    {
    	vector<int> result;
    	if(root==NULL)
    	    return result;
    	queue<Node*> q;
    	q.push(root);
    	bool leftToRight=true;
    	while(!q.empty()){
    	    int size=q.size();
    	    vector<int> ans(size);
    	    for(int i=0;i<size;i++){
    	        Node* frontNode=q.front();
    	        q.pop();
    	        int index=leftToRight?i:size-i-1;
    	        ans[index]=frontNode->data;
    	        if(frontNode->left)
    	            q.push(frontNode->left);
    	        if(frontNode->right)
    	            q.push(frontNode->right);
    	    }
    	    leftToRight=!leftToRight;
    	    for(auto i:ans){
    	        result.push_back(i);
    	    }
    	}
    	return result;
    }
