Problem: The diameter of a tree (sometimes called the width) is the number of nodes on the longest path between two end nodes. The diagram below shows two trees each with 
          diameter nine, the leaves that form the ends of the longest path are shaded (note that there is more than one path in each tree of length nine, but no path 
          longer than nine nodes). 

          Example 1:
          Input:
                 1
               /  \
              2    3
          Output: 3

Solution: 

pair<int,int> diameterFast(Node* root){
        if(root==NULL){
            pair<int,int> p = make_pair(0,0);
            return p;
        }
        
        pair<int,int> left = diameterFast(root->left);
        pair<int,int> right = diameterFast(root->right);
        
        int opt1= left.first;
        int opt2= right.first;
        int opt3= left.second + right.second + 1;
        
        pair<int,int> ans;
        ans.first = max(opt1,max(opt2,opt3));
        ans.second = max(left.second,right.second)+1;
        return ans;
    }
    int diameter(Node* root) {
        return diameterFast(root).first;
    }
