Problem: Given a binary tree. Find the postorder traversal of the tree without using recursion.

Example 1

Input:
           1
         /   \
        2     3
      /  \
     4    5

Output: 4 5 2 3 1
Explanation:
Postorder traversal (Left->Right->Root) of 
the tree is 4 5 2 3 1.

Solution:

vector<int> postOrder(Node* root) {
        Node* current,* pre;
        current=root;
        vector<int> ans;
        while (current != NULL) {
            if (current->right == NULL) {
                ans.push_back(current->data);
                current = current->left;
            }
            else {
                pre = current->right;
                while (pre->left != NULL
                       && pre->left != current) {
                    pre = pre->left;
                }
                if (pre->left == NULL) {
                    ans.push_back(current->data);
                    pre->left = current;
                    current = current->right;
                }
                else {
                    pre->left = NULL;
                    current = current->left;
                }
            }
        }
    reverse(ans.begin(), ans.end());
    return ans;
    }
